@inject Microsoft.AspNetCore.Components.WebAssembly.Services.LazyAssemblyLoader lazyloader
@using System.Reflection
<Router AppAssembly="@typeof(App).Assembly" OnNavigateAsync="OnNavigateAsync" AdditionalAssemblies="assemblies">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" >
            <Authorizing> @*Con esto podemos modificar el mensaje que aparece antes de ser autorizado*@
                <text>Autorizando...</text> 
            </Authorizing>
        </AuthorizeRouteView>
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <CascadingAuthenticationState>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </CascadingAuthenticationState>
    </NotFound>
</Router>
@code
{
    private List<Assembly> assemblies = new List<Assembly>();   
    private async Task OnNavigateAsync(NavigationContext args)
    {
        if(args.Path.EndsWith("counter"))
        {
            var assembliesCargados = await lazyloader.LoadAssembliesAsync(
            new List<string> { "MathNet.Numerics.dll"});
            assemblies.AddRange(assembliesCargados);
        }
    }
}