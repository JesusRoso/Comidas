@page "/login"
@using Comidas.Client.Auth;
@using Comidas.Shared.DTO

@inject IMostrarMensajes mostrarMensajes
@inject IRepositorio repositorio
@inject NavigationManager navigationManager
@inject ILoginService loginService

<h3>Login</h3>

<EditForm Model="userInfo" OnValidSubmit="LoginUsuario">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group">
        <label>Email:</label>
        <div>
            <InputText Class="form-control" @bind-Value="@userInfo.Email" />
            <ValidationMessage For="@(() => userInfo.Email)" />
        </div>
    </div>

    <div class="form-group">
        <label>Password:</label>
        <div>
            <InputPassword Class="form-control" @bind-Value="@userInfo.Password" />
            <ValidationMessage For="@(() => userInfo.Password)" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    private UserInfo userInfo = new UserInfo();

    private async Task LoginUsuario()
    {
        var httpResponse = await repositorio.Post<UserInfo, UserToken>("api/cuentas/login", userInfo);

        if (httpResponse.Error)
        {
            await mostrarMensajes.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            await loginService.Login(httpResponse.Response);
            navigationManager.NavigateTo("");
        }
    }
}