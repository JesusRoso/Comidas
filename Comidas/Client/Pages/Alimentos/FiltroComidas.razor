@inject IRepositorio repositorio
<h3>Filtro Comidas</h3>

<div class="form-inline">
	<div class="form-group mb-2">
		<label for="titulo" class="sr-only">Nombre</label>
		<input @bind-value="titulo" @bind-value:event="oninput" @onkeypress="@((KeyboardEventArgs e)=> TituloKeyPress(e))"
		type="text" class="form-control" id="titulo" placeholder="Nombre comida" />
	</div>
	<div class="form-group mb-2">
		<label for="precio" class="sr-only">Precio</label>
		<input @bind-value="precio" @bind-value:event="oninput" @onkeypress="@((KeyboardEventArgs e)=> PrecioKeyPress(e))"
		type="number" class="form-control" id="precio" />
	</div>
	<button type="button" class="btn btn-primary mb-2 mx-sm-3" @onclick="@(()=>CargaNuevaComida.InvokeAsync(titulo))">Filtrar</button>
	<button type="button" class="btn btn-danger mb-2 "  @onclick="CargaNuevaComidaCompleta">Limpiar</button>
</div>

@code 
{
	[Parameter] public List<ComidasRapidas> ComidasRapidas { get; set; } = new List<ComidasRapidas>();
	[Parameter] public List<ComidasRapidas> ComidasRapidasCompleta { get; set; } = new List<ComidasRapidas>();
	[Parameter] public EventCallback<string> CargaNuevaComida { get; set; }
	[Parameter] public EventCallback CargaNuevaComidaCompleta { get; set; }

	string titulo = "";
	private void TituloKeyPress(KeyboardEventArgs e)
	{
		if(e.Key == "Enter")
		{
			ComidasRapidas = ComidasRapidas.Where(x => x.titulo.ToLower().Contains(titulo.ToLower())).ToList();
		}
	}
	int precio = 0;
	private void PrecioKeyPress(KeyboardEventArgs e)
	{
		if(e.Key == "Enter")
		{
			ComidasRapidas = ComidasRapidas.Where(x => x.titulo.ToLower().Contains(titulo.ToLower())).ToList();
		}
	}
	protected override void OnInitialized()
	{
		ComidasRapidas = ComidasRapidasCompleta;
		
	}
}
